
class Solution {
  private:int height(struct Node* node){
        // code here 
        if(node==NULL)
        return 0;
        
        int left= height(node->left);
        int right=height(node->right);
        int ans = max(left,right)+1;
    
        return ans;
    
        }
  pair<int,int> Diameter(Node* root){
            if(root==NULL){
            pair<int,int> p= make_pair(0,0);
            return p;
            }
            pair<int,int> left= Diameter(root->left);
            pair<int,int> right=Diameter(root->right);
        
            int sol1=left.first;
            int sol2=right.first;
            int sol3=left.second + right.second+1;
            pair<int,int> ans;
            ans.first=max(sol1,max(sol2,sol3));
            ans.second=max(left.second,right.second)+1;
            return ans;
            
        }
  public:
    // Function to return the diameter of a Binary Tree.
    int diameter(Node* root){
    return Diameter(root).first;
        
    }
  //My Solution
  
};
